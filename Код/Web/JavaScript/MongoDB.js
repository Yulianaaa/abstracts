// MobgoDB

// Язык — JavaScript
// База данных состоит из коллекций документов BSON (расширенный JSON, который может содержать ObjectId() и ISODate())
// Подробнее про BSON — http://bsonspec.org/

// Установка
https://www.mongodb.com/download-center#community

// Запуск (в терминале)
mongo

// Далее доступны следующие команды
help # список доступных команд
db # узнать, какая БД является текущей
use <имя_БД> # переключение между базами данных
show dbs # показать список всех доступных БД

// Также можно пользоваться любыми командами, представленными ниже

// Вставка нового документа в коллекцию (если коллекции ещё не существует, она будет создана автоматически)
db.collection.insert(<JSON-объект>)
// Ответ будет таким
WriteResult({ "nInserted": 1 }) // сообщение о том, что 1 документ успешно добавлен в коллекцию (ошибок не будет, если все id будут разными, не будет синтаксических ошибок, документ будет весить меньше 16Мб)

// Поиск в коллекции документов
db.collection.find() // вывод всех документов коллекции
db.collection.find({ "name": "iGor" }) // документ, который содержит поле name со значением iGor
db.collection.find({ "skills": "js" }) // документ, который содержит элемент js массива skills

// удаление документов
db.collection.remove({ "name": "iGor" })

// обновление документов
db.collection.update(
  { "name": "iGor" },
  { "$set" : { "age": 25 } } // изменяемый параметр
)
// обновление элементов массивов или свойств объектов
db.collection.update(
  { "name": "iGor" },
  { "$set" : { "skills.0": "js"} } // первый элемент массива
)
// если не указывать $set, то документ заменится указанным объектом
db.collection.update(
  { "name": "iGor" },
  { "age": 25 } // изменяемый параметр
)
// дополнительные параметры
db.collection.update(
  { "status": "active" },
  { "$set" : { "status": "passtive" } },
  {
    "multi": true, // обновление сразу нескольких параметров
    "upsert": true // добавить документ, если такого ещё нет
  }
)
// относительное изменение свойств документа
db.collection.update(
  { "name": "iGor" },
  { "$inc" : { "age": 1 } } // увеличение на 1 (если свойства не существует, то оно создаётся со значением величины инкремента)
)

// удалить поля (свойства) из документов
db.collection.update(
  {}, // по всей коллекции
  {"$unset": {"color": ""}}, // удалить поля (не важно, какое значение ключа)
  {"multi": true}
)

// переименовать поля
db.collection.update(
  {},
  {"$rename": {"rating": "score"}},
  {"multi": true}
)


// Источники
// https://www.codeschool.com/courses/the-magical-marvels-of-mongodb