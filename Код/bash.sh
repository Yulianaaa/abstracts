# bash (Bourne Again Shell) — основной язык терминала


# Работа с терминалом
# В терминал можно перетащить папку и тогда введётся путь к этой папке.
# ⌘ + T — создать новую вкладку
# ⌘ + K — очистить сообщения
# ↑, ↓ — переместиться по истории использованных команд
# ctrl + a — переместить каретку в начало строки
# ctrl + e — переместить каретку в конец строки
# alt + click — переместить каретку в место по клику
# tab — автозаполнение команд или имён файлов
# tab + tab — список возможных команд или имён файлов


# Команды
# все команды выполняются по структуре
команда опции аргументы
# например
echo -n 'Hello' ' World!'
# несколько однобуквенных опций могут быть записаны вместе; то есть
-a -b -c
# то же, что и
-abc
# у опций также могут быть параметры. и чтобы не путаться, их можно не разделять пробелом с самими опциями, например чтобы
# написать символами "#" слово
banner -w50 'iGor'
# команды можно писать друг за другом через точку с запятой
echo -n 'Hello'; echo ' World!'

# документация по командам
man
  -k # краткое описание
    <команда>
## краткое описание
whatis <команда>
## краткое описание
apropos <команда|часть_команды>


# "очистка" экрана
clear

# вывести на экран
echo
  -n # после ввода не переносить строку
    'Hello World!'
    {1..10} # 1 2 3 4 5 6 7 8 9 10
    {A..D}  # A B C D


# путь к текущей папке (print (или present) working directory)
pwd

# всё, что находится в папке (list the content of the current directory)
ls # в текущей папке
ls <название папки>
  # Параметры
  -a # все (в том числе и скрытые) файлы (all)
  -l # отображение списком
    drwxrwxrwx # первый символ определяет тип объекта (d — папка; - — файл)
  -h # размеры файлов отображаются удобнее
  -1 | wc -l # количество файлов в текущей папке

# перейти в папку <название папки> (change directory)
cd
  /  # корень файловой системы
  ~  # папка текущего пользователя
  .. # родительский каталог
  /home # абсолютный путь
  folder_name   # относительный путь
  "folder name" # относительный путь

# создать папку <название папки> (make directory)
mkdir
  <название папки>
  -p path/to/folder # создание подпапок при отсутствии
  -v # сообщение о том, какая папка была создана

# создать файл
touch
  file.txt
  {apple, banana, cherry, durian} # несколько файлов
  file_{1..1000} # 1000 файлов с порядковой нумерацией
  file_{1..1000}{A..C} # 3000 файлов

# редактировать файл
nano
  file.txt

# копирование файла
cp
  copy.txt to.txt
  -R copy to # копировать одну папку в другую вместе с содержимым
  -n # без замены
  -f # с заменой (по умолчанию)
  -i # спрашивать о замене
  -v # отчёт

# перемещение файла
mv
  move.txt to.txt # переименование файла
  move.txt to     # перемещение файла в папку to
  -n # без замены
  -f # с заменой (по умолчанию)
  -i # спрашивать о замене
  -v # отчёт

# удаление файла
rm
  file.txt
  -R folder # удалить папку и её содержимое
  * # удалить всё

# удаление пустой папки
rmdir
  folder

# ссылка на файл
ln
  file.txt linkname    # работает даже при удалении или перемещении файла
  -s file.txt linkname # не работает при удалении или перемещении файла

# чтение файла
cat <file.txt>  # показывает содержимое файла в консоли
more <file.txt> # с указанием прогресса
less <file.txt> # показывает содержимое файла в редакторе
  -M # появляется информация о текущей строчке
  -N # добавляются номера строчек
head <file.txt> # только верхняя часть файла
tail <file.txt> # только нижняя часть файла
  -f # обновление файла при изменениях в нём

# поиск файлов и папок
find folder
  -name "file.txt" # поиск по имени
    -and -not -path *keyword* # исключая пути, содержащие keyword
# можно задавать шаблон поиска (wildcard) с помощью символов-джокеров:
*  # 0 или больше символов
?  # любой символ
[] # любой символ из диапазона в скобках

# вывести имя текущего пользователя
whoami

# вывести все группы, которым принадлежит пользователь
groups

# изменение владельца
chown
  username:staff <file/folder> # сменить владельца
  -R username:staff <folder> # изменить пользователя папки и её содержимого

# буквенная запись привелегий
rwxrw-r-- # права для user (rwx) group (rw-) other (r--)
# r (read)
# w (write)
# x (execute)

# численная запись привелегий
# r = 4
# w = 2
# x = 1
## тогда
rwxrw-r-- = 764


# изменение привелегий
chmod
  ugo=rwx <file/folder> # разрешить всё всем
  a=rwx <file/folder> # разрешить всё всем
  777 <file/folder> # разрешить всё всем
  755 <file/folder> # пользователю можно всё, а группам и остальным — только читать и исполнять
  u=rwx,g=rw,o=r <file/folder> # задать права каждому типу
  ug+w <file/folder> # разрешить запись для user и group
  o-w <file/folder> # запретить запись для other
  -R <folder> # изменить права для папки и её содержимого

# переменные
$HOME # рабочая папка пользователя

## скрыть файл или папку
chflags hidden <path/to/file/or/folder>
## показать файл или папку
chflags nohidden <path/to/file/or/folder>

# выполнить команду от имени администратора root (substitute user and do)
sudo
  -k # снова будет запрашивать пароль (пароль не запрашивается в течение 5 минут бездействия)
  -u username # выполнить команду от имени пользователя username

# информация обо всех, кто может пользоваться командой sudo находится в файле /etc/sudoers

## Выключить компьютер
sudo shutdown
  -h # выключить
  -r # перезагрузить
  -s # сон
    now # сейчас
    +1  # через минуту

# Программы
## Midnight Commander (файловый менеджер внутри терминала)
# http://www.vivapage.info/midnight-commander-mac-os-x/


# Источники
# [ ] https://www.lynda.com/Bash-tutorials/Up-Running-Bash-Scripting/142989-2.html